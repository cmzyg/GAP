<?php

/**
 * Description of Exception
 *
 * @author rafal
 */

namespace exceptions;

Abstract class Exception extends \Exception {

    protected $customCode;
    protected $status = "CRASHED";
    protected $type = "NOTYPESPECIFIED";
    protected $subtypes = array(0 => "No Subtype Specified");
    protected $summaryLevel;

    /**
     * 
     * @param type $message
     * @param type $code
     * @param type $summaryLevel
     * @param \application\BaseComponent $thisone  <= $this
     * @param \Exception $previous
     */
    public function __construct($message, $code = 0, $summaryLevel = null, \Exception $previous = null)
    {
        $this->customCode = $code;
        $this->summaryLevel = $summaryLevel;
        // make sure everything is assigned properly
        parent::__construct($message, $code, $previous);
    }

    // custom string representation of object
    public function __toString()
    {
        return __CLASS__ . ": [{$this->code}]: {$this->message}\n";
    }

    public function getSubType()
    {
        return $this->subtypes[$this->customCode];
    }

    public function getSummary()
    {
        $summary = '';
        if (!is_null($this->summaryLevel) && $this->summaryLevel >= 0)
        {
            if (isset($this->customSummary[$this->customCode][$this->summaryLevel]))
            {
                $summary = $this->customSummary[$this->customCode][$this->summaryLevel];
            } else
            {

                if (isset($this->customSummary[$this->customCode]))
                {
                    $summary = $this->customSummary[$this->customCode];
                } else
                {
                    $summary = $this->subtypes[0];
                }
            }
        } else
        {
            $summary = $this->subtypes[0];
        }

        return $summary;
    }

    public function getCurrentStatus()
    {
        return $this->status;
    }

    public function setCurrentStatus($status)
    {
        $this->status = $status;
    }

    /**
     * @return mixed
     */
    public function getType()
    {
        return $this->type;
    }

    function getTroublemaker()
    {
        return $this->troublemaker;
    }

}

